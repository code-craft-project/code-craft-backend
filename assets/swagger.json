{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Swagger CodeCraft",
        "description": "API endpoints documentations for CodeCraft Project"
    },
    "basePath": "/api",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/auth/sign_in": {
            "post": {
                "description": "Sign in with a new session",
                "operationId": "sign_in",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "credentials",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "sign_in response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#/definitions/UserSession"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorModel"
                        }
                    }
                }
            }
        },
        "/auth/sign_up": {
            "post": {
                "description": "Create new account",
                "operationId": "sign_up",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "sign_up body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string"
                                },
                                "first_name": {
                                    "type": "string"
                                },
                                "last_name": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "sign_up response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorModel"
                        }
                    }
                }
            }
        },
        "/organizations": {
            "get": {
                "description": "Returns the first page of organizations from the system",
                "operationId": "getOrganizations",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number of page",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "organizations response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Organization"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorModel"
                        }
                    }
                }
            }
        },
        "/organizations/{id}": {
            "get": {
                "description": "Returns a Organization based on a single ID",
                "operationId": "getOrganizationById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Organization to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "organization response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#/definitions/Organization"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorModel"
                        }
                    }
                }
            }
        },
        "/organizations/create": {
            "post": {
                "description": "Create a new organization",
                "operationId": "createOrganization",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "Bearer token for authentication"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create organization response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#/definitions/Organization"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorModel"
                        }
                    }
                }
            }
        },
        "/organizations/{id}/add_member": {
            "post": {
                "description": "Add new organization member",
                "operationId": "addOrganizationMember",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Organization to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "user_id": {
                                    "type": "integer"
                                },
                                "organization_id": {
                                    "type": "integer"
                                },
                                "role": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "Bearer token for authentication"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "add new organization member response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#/definitions/Member"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorModel"
                        }
                    }
                }
            }
        },
        "/organizations/{id}/remove_member": {
            "post": {
                "description": "remove Organization Member",
                "operationId": "removeOrganization",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Organization to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "member_id": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "Bearer token for authentication"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "remove organization member response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#/definitions/Organization"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorModel"
                        }
                    }
                }
            }
        },
        "/organizations/{id}/give_permission": {
            "post": {
                "description": "Give a specific permission to a user",
                "operationId": "givePermission",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Organization to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "permission": {
                                    "type": "string"
                                },
                                "entity_id": {
                                    "type": "integer"
                                },
                                "user_id": {
                                    "type": "integer"
                                },
                                "organization": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "Bearer token for authentication"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "give permission response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#/definitions/Organization"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorModel"
                        }
                    }
                }
            }
        },
        "/challenges": {
            "get": {
                "description": "Returns the first page of challenges from the system",
                "operationId": "getChallenges",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number of page",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "challenges response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Challenge"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorModel"
                        }
                    }
                }
            }
        },
        "/challenges/{id}": {
            "get": {
                "description": "Returns a challenge based on a single ID",
                "operationId": "getChallengeById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of challenge to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "challenge response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#/definitions/Challenge"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorModel"
                        }
                    }
                }
            }
        },
        "/challenges/create": {
            "post": {
                "description": "Creates a new challenge",
                "operationId": "createChallenge",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "create new challenge body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "title": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "topic": {
                                    "type": "string"
                                },
                                "level": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string"
                                },
                                "is_public": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "name"
                            ]
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "Bearer token for authentication"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create challenge response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#/definitions/Challenge"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorModel"
                        }
                    }
                }
            }
        },
        "/jobposts": {
            "get": {
                "description": "Returns the first page of job posts from the system",
                "operationId": "getJobPosts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number of page",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "job posts response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JobPost"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorModel"
                        }
                    }
                }
            }
        },
        "/jobposts/{id}": {
            "get": {
                "description": "Returns a Job Post based on a single ID",
                "operationId": "getJobPostById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of JobPost to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "job post response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#/definitions/JobPost"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorModel"
                        }
                    }
                }
            }
        },
        "/jobposts/create": {
            "post": {
                "description": "Create a new Job Post",
                "operationId": "createJobPost",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "Bearer token for authentication"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create job post response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#/definitions/JobPost"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorModel"
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "description": "Returns the first page of events from the system",
                "operationId": "getEvents",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number of page",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "events response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Event"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorModel"
                        }
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "description": "Returns a Event based on a single ID",
                "operationId": "getEventById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Event to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "event response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#/definitions/Event"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorModel"
                        }
                    }
                }
            }
        },
        "/events/create": {
            "post": {
                "description": "Create a new Event",
                "operationId": "createEvent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "title": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "is_public": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "start_at": {
                                    "type": "string"
                                },
                                "end_at": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "Bearer token for authentication"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create event response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#/definitions/Event"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "UserSession": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/User"
                },
                "access_token": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "profile_image_url": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-02-28T20:20:48.000Z"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-02-28T20:20:48.000Z"
                }
            }
        },
        "Organization": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "creator_id": {
                    "type": "integer"
                },
                "creator": {
                    "$ref": "#/definitions/User"
                },
                "profile_image_url": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-02-28T20:20:48.000Z"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-02-28T20:20:48.000Z"
                }
            }
        },
        "Challenge": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "is_public": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-02-28T20:20:48.000Z"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-02-28T20:20:48.000Z"
                }
            }
        },
        "JobPost": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-02-28T20:20:48.000Z"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-02-28T20:20:48.000Z"
                }
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "is_public": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "logo_url": {
                    "type": "string"
                },
                "start_at": {
                    "type": "integer"
                },
                "end_at": {
                    "type": "string",
                    "example": "2024-02-28T20:20:48.000Z"
                },
                "organization_id": {
                    "type": "integer"
                }
            }
        },
        "Member": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                },
                "organization_id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "Permission": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "permission": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                },
                "organization_id": {
                    "type": "integer"
                }
            }
        },
        "ErrorModel": {
            "type": "object",
            "required": [
                "status",
                "message"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "example": "error"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}